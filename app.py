# app.py

# Import th∆∞ vi·ªán c·∫ßn thi·∫øt
import streamlit as st                      # Th∆∞ vi·ªán t·∫°o giao di·ªán web ƒë∆°n gi·∫£n
import pandas as pd                        # X·ª≠ l√Ω b·∫£ng d·ªØ li·ªáu
import logging                             # Ghi log ƒë·ªÉ debug ho·∫∑c theo d√µi tr·∫°ng th√°i

# Import c√°c h√†m x·ª≠ l√Ω t·ª´ c√°c module con
from db import get_db_engine, get_data_by_type        # H√†m k·∫øt n·ªëi DB v√† l·∫•y d·ªØ li·ªáu
from google_sheets import export_to_google_sheets     # H√†m export d·ªØ li·ªáu l√™n Google Sheets

# Thi·∫øt l·∫≠p h·ªá th·ªëng log, ghi ·ªü m·ª©c INFO (hi·ªÉn th·ªã c√°c b∆∞·ªõc ch√≠nh)
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def main():
    # C·∫•u h√¨nh giao di·ªán trang web
    st.set_page_config(page_title="POS Data Export", page_icon="üìä")

    # Ti√™u ƒë·ªÅ ch√≠nh c·ªßa ·ª©ng d·ª•ng
    st.title("üì§ Export POS Data to Google Sheets")

    # Dropdown cho ng∆∞·ªùi d√πng ch·ªçn lo·∫°i d·ªØ li·ªáu mu·ªën export
    data_type = st.selectbox("Select data type to export:", [
        "Sales by Salesperson",
        "Sales by KPI Center",       
        "Backlog",                  # ƒê∆°n h√†ng ch∆∞a giao
        "Broker Commission"
    ])

    # Cho ph√©p ng∆∞·ªùi d√πng ƒëi·ªÅu ch·ªânh s·ªë d√≤ng preview d·ªØ li·ªáu tr∆∞·ªõc khi export
    preview_rows = st.slider("Preview rows:", 5, 100, 20)

    # Khi ng∆∞·ªùi d√πng nh·∫•n n√∫t export
    if st.button("Export to Google Sheets"):
        try:
            # B∆∞·ªõc 1: T·∫°o k·∫øt n·ªëi ƒë·∫øn database
            engine = get_db_engine()

            # B∆∞·ªõc 2: G·ªçi h√†m t∆∞∆°ng ·ª©ng ƒë·ªÉ truy v·∫•n v√† x·ª≠ l√Ω d·ªØ li·ªáu theo data_type
            logger.info(f"üì• Loading data for: {data_type}")
            df = get_data_by_type(data_type, engine)

            # B∆∞·ªõc 3: Ki·ªÉm tra n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu th√¨ b√°o ng∆∞·ªùi d√πng
            if df is None or df.empty:
                st.warning("‚ö†Ô∏è No data found.")
                return

            # B∆∞·ªõc 4: Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu preview
            st.subheader("üìÑ Preview Data")
            st.dataframe(df.head(preview_rows))   # Hi·ªÉn th·ªã s·ªë d√≤ng preview ƒë∆∞·ª£c ch·ªçn

            # B∆∞·ªõc 5: Export l√™n Google Sheets
            sheet_name = export_to_google_sheets(df, data_type)

            # B∆∞·ªõc 6: Th√¥ng b√°o th√†nh c√¥ng
            st.success(f"‚úÖ Exported to Google Sheet: `{sheet_name}`")

        except Exception as e:
            # N·∫øu c√≥ l·ªói x·∫£y ra th√¨ ghi log v√† b√°o l·ªói ra giao di·ªán
            logger.exception("‚ùå Export failed:")
            st.error(f"‚ùå Export failed: {e}")


# G·ªçi h√†m ch√≠nh khi ch·∫°y file n√†y
if __name__ == "__main__":
    main()
